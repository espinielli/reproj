
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "ceramic"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('ceramic')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cc_location")
> ### * cc_location
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cc_location
> ### Title: Obtain tiled imagery by location query
> ### Aliases: cc_location cc_elevation cc_macquarie cc_davis cc_mawson
> ###   cc_casey cc_heard cc_kingston
> 
> ### ** Examples
> 
> if (!is.null(get_api_key())) {
+ 
+  img <- cc_location(cbind(147, -42), buffer = 1e5)
+ 
+  ## this source does not need the Mapbox API, but we won't run the example unless it's set
+  dem <- cc_kingston(buffer = 1e4, type = "elevation-tiles-prod")
+  raster::plot(dem, col = grey(seq(0, 1, length = 94)))
+ 
+  ## Mapbox imagery
+  im <- cc_macquarie()
+  library(raster)
+  plotRGB(im)
+  }
Preparing to download: 16 tiles at zoom = 9 from 
https://api.mapbox.com/v4/mapbox.satellite/
Preparing to download: 9 tiles at zoom = 12 from 
https://s3.amazonaws.com/elevation-tiles-prod/geotiff/
Preparing to download: 9 tiles at zoom = 13 from 
https://api.mapbox.com/v4/mapbox.outdoors/
Warning: package 'raster' was built under R version 3.6.3
Loading required package: sp
Warning: package 'sp' was built under R version 3.6.3
> 
> 
> 
> cleanEx()

detaching 'package:raster', 'package:sp'

> nameEx("ceramic_cache")
> ### * ceramic_cache
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ceramic_cache
> ### Title: Ceramic file cache
> ### Aliases: ceramic_cache slippy_cache
> ### Keywords: internal
> 
> ### ** Examples
> 
> if (interactive()) {
+  ceramic_cache()
+ }
> 
> 
> 
> cleanEx()
> nameEx("ceramic_tiles")
> ### * ceramic_tiles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ceramic_tiles
> ### Title: Tile files
> ### Aliases: ceramic_tiles
> 
> ### ** Examples
> 
> if (interactive() && !is.null(get_api_key())) {
+  tiles <- ceramic_tiles(zoom = 0)
+ }
> 
> 
> 
> cleanEx()
> nameEx("get-tiles-constrained")
> ### * get-tiles-constrained
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get-tiles-constrained
> ### Title: Get tiles with specific constraints
> ### Aliases: get-tiles-constrained get_tiles_zoom get_tiles_dim
> ###   get_tiles_buffer
> 
> ### ** Examples
> 
> if (!is.null(get_api_key())) {
+  ex <- raster::extent(146, 147, -43, -42)
+  tile_infoz <- get_tiles_zoom(ex, type = "mapbox.outdoors", zoom = 1)
+ 
+  tile_infod <- get_tiles_dim(ex, type = "mapbox.outdoors", dim = c(256, 256))
+ 
+  tile_infob <- get_tiles_buffer(cbind(146.5, -42.5), buffer = 5000, type = "mapbox.outdoors")
+ }
Preparing to download: 1 tiles at zoom = 1 from 
https://api.mapbox.com/v4/mapbox.outdoors/
Preparing to download: 1 tiles at zoom = 4 from 
https://api.mapbox.com/v4/mapbox.outdoors/
Preparing to download: 9 tiles at zoom = 13 from 
https://api.mapbox.com/v4/mapbox.outdoors/
> 
> 
> 
> cleanEx()
> nameEx("get_api_key")
> ### * get_api_key
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_api_key
> ### Title: Get API key for Mapbox service
> ### Aliases: get_api_key
> 
> ### ** Examples
> 
> get_api_key()
[1] "pk.eyJ1IjoibWRzdW1uZXIiLCJhIjoiY2lleHM3dDk5MDBzbHM4bTM1bjkyY2kwayJ9.IrUihishnOa8w0JFXhXqZA"
> 
> 
> 
> cleanEx()
> nameEx("get_tiles")
> ### * get_tiles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_tiles
> ### Title: Download Mapbox imagery tiles
> ### Aliases: get_tiles
> 
> ### ** Examples
> 
> if (!is.null(get_api_key())) {
+    tile_info <- get_tiles(raster::extent(146, 147, -43, -42), type = "mapbox.outdoors", zoom = 5)
+ }
Preparing to download: 2 tiles at zoom = 5 from 
https://api.mapbox.com/v4/mapbox.outdoors/
> 
> 
> 
> cleanEx()
> nameEx("mercator_tile_extent")
> ### * mercator_tile_extent
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mercator_tile_extent
> ### Title: Tile extent
> ### Aliases: mercator_tile_extent
> 
> ### ** Examples
> 
> mercator_tile_extent(2, 4, zoom = 10)
     xmin      xmax      ymin      ymax 
-19959237 -19920101  19841830  19880965 
> 
> global <- mercator_tile_extent(0, 0, zoom = 0)
> plot(NA, xlim = global[c("xmin", "xmax")], ylim = global[c("ymin", "ymax")])
> rect_plot <- function(x) rect(x["xmin"], x["ymin"], x["xmax"], x["ymax"])
> rect_plot(mercator_tile_extent(1, 1, zoom = 2))
> rect_plot(mercator_tile_extent(2, 1, zoom = 2))
> rect_plot(mercator_tile_extent(1, 2, zoom = 2))
> 
> rect_plot(mercator_tile_extent(1, 1, zoom = 4))
> rect_plot(mercator_tile_extent(2, 1, zoom = 4))
> rect_plot(mercator_tile_extent(1, 2, zoom = 4))
> 
> 
> 
> cleanEx()
> nameEx("plot_tiles")
> ### * plot_tiles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot_tiles
> ### Title: Plot slippy map tiles
> ### Aliases: plot_tiles tiles_to_polygon
> 
> ### ** Examples
> 
> if (!is.null(get_api_key())) {
+   get_tiles_zoom(zoom = 1)
+   tiles <- ceramic_tiles(zoom = 1)
+   plot_tiles(tiles)
+ }
Preparing to download: 4 tiles at zoom = 1 from 
https://api.mapbox.com/v4/mapbox.satellite/
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  15.59 1.3 17.1 NA NA 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
